{"version":3,"sources":["components/Home.tsx","components/task/Create.tsx","components/task/Edit.tsx","components/action/Create.tsx","components/action/Edit.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Home","props","state","tasks","completed_tasks","axios","get","then","data","setState","id","delete","index","findIndex","splice","history","push","componentDidMount","post","this","ref","className","map","style","marginBottom","marginTop","is_completed","color","name","actions","key","to","aria-hidden","onClick","deleteAction","completeAction","background","marginRight","deleteTask","completeTask","React","TaskCreate","processFormSubmission","e","preventDefault","loading","formData","submitSuccess","values","setTimeout","handleInputChanges","currentTarget","value","onSubmit","noValidate","htmlFor","type","onChange","placeholder","alignItems","withRouter","EditTask","a","put","setValues","match","params","task","role","defaultValue","ActionCreate","task_id","Object","EditAction","console","log","length","action","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6622ef99.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport axios from 'axios';\n\ninterface IState {\n  tasks: any[];\n  completed_tasks: any[];\n}\n\nexport default class Home extends React.Component<RouteComponentProps, IState> {\n  constructor(props: RouteComponentProps) {\n    super(props);\n    this.state = { tasks: [], completed_tasks: [] }\n  }\n  public componentDidMount(): void {\n    axios.get(`http://3.136.154.31/api/v1/tasks/?is_completed=false`).then(data => {\n      this.setState({ tasks: data.data })\n    })\n    axios.get(`http://3.136.154.31/api/v1/tasks/?is_completed=true`).then(data => {\n      this.setState({ completed_tasks: data.data })\n    })\n  }\n\n  public deleteTask(id: string) {\n    axios.delete(`http://3.136.154.31/api/v1/tasks/${id}`).then(data => {\n      const index = this.state.tasks.findIndex(tasks => tasks.id === id);\n      this.state.tasks.splice(index, 1);\n      this.props.history.push('/');\n    })\n  }\n\n  public deleteAction(id: string) {\n    axios.delete(`http://3.136.154.31/api/v1/actions/${id}`).then(data => {\n      this.componentDidMount();\n    })\n\n  }\n\n  public completeAction(id: string) {\n    axios.post(`http://3.136.154.31/api/v1/actions/${id}`).then(data => {\n      this.componentDidMount();\n    })\n  }\n\n  public completeTask(id: string) {\n    axios.post(`http://3.136.154.31/api/v1/tasks/${id}`).then(data => {\n      this.componentDidMount();\n    })\n\n  }\n\n  public render() {\n    const tasks = this.state.tasks;\n    const completed_tasks = this.state.completed_tasks;\n    const ref = this\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"row\">\n            {tasks && tasks.map(tasks =>\n              <div className=\"col-sm-6\" >\n                < div className=\"card\" style={{ marginBottom: \"20px\", marginTop: \"20px\" }} >\n                  <div className=\"card-header\">\n                    {\n                      tasks.is_completed\n                        ? <h5 className=\"card-title\" style={{ color: \"green\" }} >Task: {tasks.name}</h5>\n                        : <h5 className=\"card-title\" style={{ color: \"red\" }} >Task: {tasks.name}</h5>\n                    }\n                  </div>\n\n                  <div className=\"card-body\">\n                    <p className=\"card-text\">{tasks.is_completed}</p>\n\n                    {tasks.actions.map(function (actions: any) {\n\n                      return (\n                        <div className=\"list-group\">\n                          Task ID: {tasks.id}\n\n                          {\n                            actions.is_completed\n                              ? <li className=\"list-group-item clearfix\" key={actions.id} style={{ color: \"green\" }}>\n                                {actions.name}\n                                <span className=\"pull-right\">\n                                  <span className=\"btn btn-xs btn-default\" >\n                                    <Link to={`actions/${actions.id}`} className=\"fa fa-pencil\" style={{ color: \"#FBD786\" }} aria-hidden=\"true\"></Link>\n                                  </span>\n                                  <span className=\"btn btn-xs btn-default\" >\n                                    <span className=\"fa fa-trash\" style={{ color: \"#F7797D\" }} aria-hidden=\"true\" onClick={() => ref.deleteAction(actions.id)} > </span>\n                                  </span>\n                                  <span className=\"btn btn-xs btn-default\" >\n                                    <span className=\"fa fa-times\" style={{ color: \"#C6FE2E\" }} aria-hidden=\"true\" onClick={() => ref.completeAction(actions.id)} > </span>\n                                  </span>\n                                </span>\n                              </li>\n                              : <li className=\"list-group-item clearfix\" key={actions.id} style={{ color: \"red\" }} >{actions.name}\n                                <span className=\"pull-right\">\n                                  <span className=\"btn btn-xs btn-default\">\n                                    <Link to={`actions/${actions.id}`} className=\"fa fa-pencil\" style={{ color: \"#FBD786\" }} aria-hidden=\"true\"></Link>\n                                  </span>\n                                  <span className=\"btn btn-xs btn-default\">\n                                    <span className=\"fa fa-trash\" style={{ color: \"#F7797D\" }} aria-hidden=\"true\" onClick={() => ref.deleteAction(actions.id)} > </span>\n                                  </span>\n                                  <span className=\"btn btn-xs btn-default\">\n                                    <span className=\"fa fa-check\" style={{ color: \"#C6FE2E\" }} aria-hidden=\"true\" onClick={() => ref.completeAction(actions.id)} > </span>\n                                  </span>\n                                </span>\n                              </li>\n                          }\n\n\n                        </div>\n                      );\n                    })}\n\n\n\n                    <div>\n                      <div className=\"btn-group\" style={{ marginTop: \"2%\" }}>\n                        <Link to={`tasks/${tasks.id}/actions/`} className=\"card-link btn btn-sm\" style={{ background: \"#00AAFF\", color: \"black\", marginRight: \"2%\" }} >Add Action </Link>\n                        <Link to={`tasks/${tasks.id}`} className=\"card-link btn btn-sm\" style={{ background: \"#FBD786\", color: \"black\", marginRight: \"2%\" }} >Edit Task </Link>\n                        <button className=\"card-link btn btn-sm\" style={{ background: \"#F7797D\", color: \"black\", marginRight: \"2%\" }} onClick={() => this.deleteTask(tasks.id)}>Delete Task</button>\n                        <button className=\"card-link btn btn-sm\" style={{ background: \"#C6FE2E\", color: \"black\" }} onClick={() => this.completeTask(tasks.id)}>Complete Task</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n\n            {tasks && completed_tasks.map(tasks =>\n              <div className=\"col-sm-6\" >\n                < div className=\"card\" style={{ marginBottom: \"20px\", marginTop: \"20px\" }} >\n                  <div className=\"card-header\">\n                    <h5 className=\"card-title\" style={{ color: \"green\" }} >Task: {tasks.name}</h5>\n\n                  </div>\n\n                  <div className=\"card-body\">\n                    <p className=\"card-text\">{tasks.is_completed}</p>\n\n                    {tasks.actions.map(function (actions: any) {\n\n                      return (\n                        <div className=\"list-group\">\n                          {\n                            actions.is_completed\n                              ? <li className=\"list-group-item clearfix\" key={actions.id} style={{ color: \"green\" }}>\n                                {actions.name}\n                                <span className=\"pull-right\">\n                                  <span className=\"btn btn-xs btn-default\" >\n                                    <Link to={`actions/${actions.id}`} className=\"fa fa-pencil\" style={{ color: \"#FBD786\" }} aria-hidden=\"true\"></Link>\n                                  </span>\n                                  <span className=\"btn btn-xs btn-default\" >\n                                    <Link to={`actions/${actions.id}`} className=\"fa fa-trash\" style={{ color: \"#F7797D\" }} aria-hidden=\"true\"></Link>\n                                  </span>\n                                  <span className=\"btn btn-xs btn-default\" >\n                                    <span className=\"fa fa-times\" style={{ color: \"#00AAFF\" }} aria-hidden=\"true\" onClick={() => ref.completeAction(actions.id)}></span>\n                                  </span>\n                                </span>\n                              </li>\n\n                              : <li className=\"list-group-item clearfix\" key={actions.id} style={{ color: \"red\" }} >{actions.name}\n                                <span className=\"pull-right\">\n                                  <span className=\"btn btn-xs btn-default\">\n                                    <Link to={`actions/${actions.id}`} className=\"fa fa-pencil\" style={{ color: \"#FBD786\" }} aria-hidden=\"true\"></Link>\n                                  </span>\n                                  <span className=\"btn btn-xs btn-default\">\n                                  <span className=\"fa fa-trash\" style={{ color: \"#F7797D\" }} aria-hidden=\"true\" onClick={() => ref.deleteAction(actions.id)} > </span>\n                                  </span>\n                                  <span className=\"btn btn-xs btn-default\" >\n                                    <span className=\"fa fa-check\" style={{ color: \"#C6FE2E\" }} aria-hidden=\"true\" onClick={() => ref.completeAction(actions.id)} > </span>\n                                  </span>\n                                </span>\n                              </li>\n                          }\n\n\n                        </div>\n                      );\n                    })}\n\n\n\n                    <div>\n                      <div className=\"btn-group\" style={{ marginTop: \"2%\" }}>\n\n                        <Link to={`tasks/${tasks.id}/actions/`} className=\"card-link btn btn-sm\" style={{ background: \"#00AAFF\", color: \"black\", marginRight: \"2%\" }} >Add Action </Link>\n                        <Link to={`tasks/${tasks.id}`} className=\"card-link btn btn-sm\" style={{ background: \"#FBD786\", color: \"black\", marginRight: \"2%\" }} >Edit Task </Link>\n                        <button className=\"card-link btn btn-sm\" style={{ background: \"#F7797D\", color: \"black\", marginRight: \"2%\" }} onClick={() => this.deleteTask(tasks.id)}>Delete Task</button>\n\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n\n\n          </div>\n        </div>\n      </div >\n\n    )\n  }\n}","import * as React from 'react';\nimport axios from 'axios';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\nexport interface IValues {\n    name: string,\n    is_completed: boolean\n}\n\nexport interface IFormState {\n    [key: string]: any;\n    values: IValues[];\n    submitSuccess: boolean;\n    loading: boolean;\n}\n\nclass TaskCreate extends React.Component<RouteComponentProps, IFormState> {\n\n    constructor(props: RouteComponentProps) {\n        super(props);\n        this.state = {\n            name: '',\n            is_completed: false,\n            values: [],\n            loading: false,\n            submitSuccess: false,\n        }\n    }\n    private processFormSubmission = (e: React.FormEvent<HTMLFormElement>): void => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        const formData = {\n            name: this.state.name,\n            is_completed: this.state.is_completed\n        }\n\n        this.setState({ submitSuccess: true, values: [...this.state.values, formData], loading: false });\n        axios.post(`http://3.136.154.31/api/v1/tasks/`, formData).then(data => [\n            setTimeout(() => {\n                this.props.history.push('/');\n            }, 200)\n        ]);\n    }\n\n    private handleInputChanges = (e: React.FormEvent<HTMLInputElement>) => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n    public render() {\n        const { submitSuccess, loading } = this.state;\n        return (\n            <div>\n                <div className={\"col-md-12 form-wrapper\"}>\n                    <h2> Create Task </h2>\n\n                    \n                    <form id={\"create-post-form\"} onSubmit={this.processFormSubmission} noValidate={true}>\n                        <div className=\"row\">\n                            <div className=\"form-group col\">\n                                <label htmlFor=\"name\"> Task </label>\n                                <input type=\"text\" id=\"name\" onChange={(e) => this.handleInputChanges(e)} name=\"name\" className=\"form-control\" placeholder=\"\" />\n                            </div>\n                        </div>\n                        <div className=\"form-group pull-center\" style={{ alignItems: \"center\"}} >\n                            <button className=\"btn btn-success\" type=\"submit\">\n                                Create Tasks\n                            </button>\n                            {loading && <span className=\"fa fa-circle-o-notch fa-spin\" />}\n                        </div>\n\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(TaskCreate)","import * as React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nexport interface IValues {\n    [key: string]: any;\n}\nexport interface IFormState {\n    id: string;\n    task: any;\n    values: IValues[];\n    submitSuccess: boolean;\n    loading: boolean;\n}\n\n\nclass EditTask extends React.Component<RouteComponentProps<any>, IFormState> {\n    constructor(props: RouteComponentProps) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            task: {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n        }\n    }\n\n    public componentDidMount(): void {\n        axios.get(`http://3.136.154.31/api/v1/tasks/${this.state.id}`).then(data => {\n            this.setState({ task: data.data });\n        })\n    }\n\n    private processFormSubmission = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        axios.put(`http://3.136.154.31/api/v1/tasks/${this.state.id}`, this.state.values).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/');\n            }, 200)\n        })\n    }\n\n    private setValues = (values: IValues) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n    private handleInputChanges = (e: React.FormEvent<HTMLInputElement>) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value })\n    }\n\n    public render() {\n        const { submitSuccess, loading } = this.state;\n        return (\n            <div className=\"App\">\n                {this.state.task &&\n                    <div>\n                        < h1 > Task List Management App</h1>\n                        <p> Built with React.js and TypeScript </p>\n\n                        <div>\n                            <div className={\"col-md-12 form-wrapper\"}>\n                                <h2> Edit Task </h2>\n                                {submitSuccess && (\n                                    <div className=\"alert alert-info\" role=\"alert\">\n                                        Tasks's details has been edited successfully </div>\n                                )}\n                                <form id={\"create-post-form\"} onSubmit={this.processFormSubmission} noValidate={true}>\n                                    <div className=\"form-group col-md-12\">\n                                        <label htmlFor=\"name\"> Task's Name </label>\n                                        <input type=\"text\" id=\"name\" defaultValue={this.state.task.name} onChange={(e) => this.handleInputChanges(e)} name=\"name\" className=\"form-control\" placeholder=\"\" />\n                                    </div>\n                                    <div className=\"form-group col-md-12\">\n                                        <label htmlFor=\"last_name\"> Is Completed? </label>\n                                        <input type=\"checkbox\" id=\"is_completed\" defaultValue={this.state.task.is_completed} onChange={(e) => this.handleInputChanges(e)} name=\"is_completed\" className=\"form-control\" placeholder=\"\" />\n                                    </div>\n\n                                    <div className=\"form-group col-md\">\n                                        <button className=\"btn btn-success\" type=\"submit\">\n                                            Edit Task </button>\n                                        {loading &&\n                                            <span className=\"fa fa-circle-o-notch fa-spin\" />\n                                        }\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n        )\n    }\n\n}\nexport default withRouter(EditTask)","import * as React from 'react';\nimport axios from 'axios';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\nexport interface IValues {\n    name: string,\n    task_id?: string,\n    is_completed?: boolean\n}\n\nexport interface IFormState {\n    [key: string]: any;\n    values: IValues[];\n    submitSuccess: boolean;\n    loading: boolean;\n}\n\nclass ActionCreate extends React.Component<RouteComponentProps, IFormState> {\n\n    constructor(props: RouteComponentProps) {\n        super(props);\n               \n        this.state = {\n            name: '',\n            task_id: Object.values(this.props.match.params)[0],\n            is_completed: false,\n            values: [],\n            loading: false,\n            submitSuccess: false,\n        }\n    }\n\n    private processFormSubmission = (e: React.FormEvent<HTMLFormElement>): void => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        const formData = {\n            name: this.state.name,\n            task_id: this.state.task_id,\n            is_completed: this.state.is_completed\n        }\n        \n        this.setState({ submitSuccess: true, values: [...this.state.values, formData], loading: false });\n        axios.post(`http://3.136.154.31/api/v1/tasks/${formData.task_id}/actions`, formData).then(data => [\n            setTimeout(() => {\n                this.props.history.push('/');\n            }, 200)\n        ]);\n    }\n\n    private handleInputChanges = (e: React.FormEvent<HTMLInputElement>) => {\n        e.preventDefault();\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value,\n        })\n    }\n    public render() {\n        const { submitSuccess, loading } = this.state;\n        return (\n            <div>\n                <div className={\"col-md-12 form-wrapper\"}>\n                    <h2> Create Action </h2>\n\n                    \n                    <form id={\"create-post-form\"} onSubmit={this.processFormSubmission} noValidate={true}>\n                        <div className=\"row\">\n                            <div className=\"form-group col\">\n                                <label htmlFor=\"name\"> Action </label>\n                                <input type=\"text\" id=\"name\" onChange={(e) => this.handleInputChanges(e)} name=\"name\" className=\"form-control\" placeholder=\"\" />\n                            </div>\n                        </div>\n                        <div className=\"form-group pull-center\" style={{ alignItems: \"center\"}} >\n                            <button className=\"btn btn-success\" type=\"submit\">\n                                Create Action\n                            </button>\n                            {loading && <span className=\"fa fa-circle-o-notch fa-spin\" />}\n                        </div>\n\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(ActionCreate)","import * as React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nexport interface IValues {\n    [key: string]: any;\n}\nexport interface IFormState {\n    id: string;\n    action: any;\n    values: IValues[];\n    submitSuccess: boolean;\n    loading: boolean;\n}\n\n\nclass EditAction extends React.Component<RouteComponentProps<any>, IFormState> {\n    constructor(props: RouteComponentProps) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            action: {},\n            values: [],\n            loading: false,\n            submitSuccess: false,\n        }\n    }\n\n    public componentDidMount(): void {\n        axios.get(`http://3.136.154.31/api/v1/actions/${this.state.id}`).then(data => {\n            this.setState({ action: data.data });\n        })\n    }\n\n    private processFormSubmission = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        console.log(\"AAAAAAAAAAAA\");\n        console.log(this.state.values);\n        console.log(this.state);\n\n        if (this.state.values.length === 0) {\n            axios.put(`http://3.136.154.31/api/v1/actions/${this.state.id}`, this.state.action).then(data => {\n                this.setState({ submitSuccess: true, loading: false })\n                setTimeout(() => {\n                    this.props.history.push('/');\n                }, 200)\n            })\n        }\n\n        axios.put(`http://3.136.154.31/api/v1/actions/${this.state.id}`, this.state.values).then(data => {\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/');\n            }, 200)\n        })\n    }\n\n    private setValues = (values: IValues) => {\n        console.log(values);\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    private handleInputChanges = (e: React.FormEvent<HTMLInputElement>) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value })\n    }\n\n    public render() {\n        const { submitSuccess, loading } = this.state;\n        return (\n            <div className=\"App\">\n                {this.state.action &&\n                    <div>\n                        <div className={\"col-md-12 form-wrapper\"}>\n                            <h2> Edit Action </h2>\n                            \n                            <form id={\"create-post-form\"} onSubmit={this.processFormSubmission} noValidate={true}>\n                                <div className=\"form-group col-md-12\">\n                                    <label htmlFor=\"name\"> Action's Name </label>\n                                    <input type=\"text\" id=\"name\" defaultValue={this.state.action.name} onChange={(e) => this.handleInputChanges(e)} name=\"name\" className=\"form-control\" placeholder=\"\" />\n                                </div>\n                                <div className=\"form-group col-md\">\n                                    <button className=\"btn btn-success\" type=\"submit\">\n                                        Edit Action </button>\n                                    {loading &&\n                                        <span className=\"fa fa-circle-o-notch fa-spin\" />\n                                    }\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                }\n            </div>\n        )\n    }\n\n}\nexport default withRouter(EditAction)","import * as React from 'react';\nimport './App.css';\nimport { Switch, Route, withRouter, RouteComponentProps, Link } from 'react-router-dom';\nimport Home from './components/Home';\nimport TaskCreate from './components/task/Create';\nimport EditTask from './components/task/Edit';\nimport ActionCreate from './components/action/Create';\nimport EditAction from './components/action/Edit';\n\nclass App extends React.Component<RouteComponentProps<any>> {\n  public render() {\n    return (\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to={'/tasks'}> Create Task </Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route path={'/'} exact component={Home} />\n          <Route path={'/tasks'} exact component={TaskCreate} />\n          <Route path={'/tasks/:id/actions'} exact component={ActionCreate} />\n          <Route path={'/tasks/:id'} exact component={EditTask} />\n          <Route path={'/actions/:id'} exact component={EditAction} />\n        </Switch>\n      </div>\n    );\n  }\n}\nexport default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}